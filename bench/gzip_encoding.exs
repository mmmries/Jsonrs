# Sample Credits:
# 1mb sample generated by https://json-generator.com/
# 10mb sample https://raw.githubusercontent.com/TheProfs/socket-mem-leak/master/10mb-sample.json
# 100mb sample 100mb sample from https://raw.githubusercontent.com/seductiveapps/largeJSON/master/100mb.json
# stored as gzip to minimize the git repo impact
inputs = %{
  "1m" => File.read!("bench/fixtures/1mb_sample.json.gz") |> :zlib.gunzip() |> Jason.decode!(),
  "10m" => File.read!("bench/fixtures/10mb_sample.json.gz") |> :zlib.gunzip() |> Jason.decode!(),
  "100m" => File.read!("bench/fixtures/100mb_sample.json.gz") |> :zlib.gunzip() |> Jason.decode!()
}

Enum.each(inputs, fn {key, data} ->
  zipped = Jsonrs.encode!(data, compress: :gzip)
  IO.puts "#{key} compressed to #{byte_size(zipped)} bytes"
end)

Benchee.run(
  %{
    "encode_gzip" => fn input -> Jsonrs.encode!(input, lean: true, compress: :gzip) end,
  },
  inputs: inputs,
  time: 60,
  memory_time: 3
)
